version: 2
jobs:
  build:
    docker:
      - image: gliderlabs/ci:build-2
        command: ["/bin/bash"]
      - image: mattaitchison/dynamodb-local
        cmd: ["-inMemory" ,"-sharedDb"]
    working_directory: /go/src/github.com/gliderlabs/cmd
    steps:
      - checkout
      - run:
          name: Build cmd
          command: make build
      - run:
          name: Run tests
          command: go test -v $(glide nv) | go-junit-report > /tmp/test-results/unit-tests.xml
      - store_test_results:
          path: /tmp/test-results
      - run:
          name: Build ui
          command: make ui-build
      - setup_docker_engine
      - run:
          name: Build Image
          command: make image
      - run:
          name: Push Image
          command: ecr-push gliderlabs/cmd $(infra-query -r ".modules[0].outputs.repos.value.cmd")
      - store_artifacts:
          path: build
          destination: build
      - deploy:
          name: Deploy website
          command: |
            if is-branch "master"; then
              mkdir -p /root/.ssh
              echo -e "Host alpha.cmd.io\n\tStrictHostKeyChecking no\n" >> /root/.ssh/config
              make -C www publish-ci
            fi
      - deploy:
          name: Deploy beta channel
          command: |
            if is-branch "master"; then
              make deploy-beta IMAGE=$(infra-query -r ".modules[0].outputs.repos.value.cmd"):build-$CIRCLE_BUILD_NUM
            fi
      - deploy:
          name: Deploy alpha channel
          command: |
            if is-branch "master"; then
              make deploy-alpha IMAGE=$(infra-query -r ".modules[0].outputs.repos.value.cmd"):build-$CIRCLE_BUILD_NUM
              [[ "$(ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${CMD_TOKEN_ALPHA}@alpha.cmd.io gliderbot/ping)" == "pong" ]]
              [[ "$(curl -Ss https://${CMD_TOKEN_ALPHA}@alpha.cmd.io/run/gliderbot/ping)" == "pong" ]]
            fi
